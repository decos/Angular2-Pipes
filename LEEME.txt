3. PIPES - TRANSFORMAN LOS VALORES MOSTRADOS EN PANTALLA
	
	INICIO DEL PROYECTO Y LA INTRODUCCIÓN A LOS PIPES
		
		- Ingresar por consola:
			ng new pipes
			ng serve
	
	PIPE: UPPERCASE Y LOWERCASE
	
		- Ir a la pagina de Bootstrap
			https://v4-alpha.getbootstrap.com/
			
		- Copiar el CDN en el index.html del proyecto
		
		- Agregar la variable "nombre"
			src\app\app.component.ts
			
		- Agregar el codigo HTML
			src\app\app.component.html
			
	PIPE: SLICE
		
		Ex:
			- {{ nombre | slice:3 }} del 3 al final
			- {{ arreglo | slice:1:5 }} del 1 al 4
			- <li *ngFor="let item of arreglo | slice:5:20">
			
	PIPE: DECIMAL
		Mostrar numeros y asegurarnos que tengan un formato o tamaño particular
		
		number_expression | number[:digitInfo]
		{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}
		
		minIntegerDigits: defecto 1
		minFractionDigits: defecto 0
		maxFractionDigits: defecto 3
		
		Ex: {{pi | number:'3.5-5'}}
		
	PIPE: PERCENT
		Multiplica por 100 el número y muestra en porcentaje el valor
		
		number_expression | percent[:digitInfo]
		
		Ex: {{ a | percent:'2.2-2' }}
		
	PIPE: CURRENCY - MONEDA
		Es utilizado cuando quieremos mostrar formatos de moneda
		
		number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]
		currencyCode => https://en.wikipedia.org/wiki/ISO_4217
		symbolDisplay => [true|false]
		digitInfo => Ver DecimalPipe
		
	PIPE: JSON
		Convierte el valor usando JSON.stringify
		Ex:
			<pre>
				{{ heroe | json }}
			</pre>
		
	PIPE: ASYNC
		Nos va permitir mostrar información que vienen de observables o promesas
		Ex:
			valorDePromesa = new Promise( (resolve,  reject) => {
				setTimeout( () => resolve('Llego la data'),3500 );
			})
		
			valorDePromesa | async
		
	PIPE: DATE- FECHA
		Nos va permitir mostrar nuestra fecha en una forma más comoda para el usuario final.
		Ex:
			fecha = new Date();
			
			{{ fecha | date }}
			{{ fecha | date:'medium' }}
			{{ fecha | date:'MMMM - dd' }}
			{{ fecha | date:'MMMM - dd' }}
			
		Por defecto esta en ingles, para traducirlo debemos hacer lo siguiente en el app.module.ts

		1. Importar
			import { LOCALE_ID } from '@angular/core'
		2. Agregar un objeto al arreglo providers
			{ provide: LOCALE_ID, useValue:"es" }
			
			
			
			
			
			
			
			
			
			
			
			
			
		
		
		
		
		
		
		
		
		
		
		
		
		
		